# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\pyQts\theStockMarket.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QInputDialog, QLineEdit, QFileDialog
from PyQt5.QtCore import QSize
from PyQt5.QtGui import QMovie, QPainter, QPixmap

import stock_functions
import pandas as pd
import numpy as np
from sklearn.svm import SVR
from sklearn.tree import DecisionTreeRegressor
import pickle  

class Ui_MainPage(object):
    
    def messagebox(self, title, message):
        mess = QtWidgets.QMessageBox()
        mess.setWindowTitle(title)
        mess.setText(message)
        mess.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mess.exec_()
    
    def errorbox(self, title, message):
        mess = QtWidgets.QMessageBox()
        mess.setWindowTitle(title)
        mess.setText(message)
        mess.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mess.exec_()
           
    def csvdata(self, data):
        mod = stock_functions.pred_new(self.companyname)
        datas = data.iloc[0:, 1:].values
        #float(datas)
        datas = np.reshape(datas,(len(datas), 1))
        self.predictt = mod.predict(datas)
        
        return self.predictt
    
    def makepred(self, open_price):
        mod = stock_functions.pred_new(self.companyname)
        
        prices = [34.9,29.4,40.0,23.7]
        open_price = open_price.replace(',', '')
        float(open_price)
        
        prices.append(open_price)
        
        prices = np.reshape(prices,(len(prices), 1))
        self.pred = mod.predict(prices)
        return self.pred
    
    def getval(self):
        
        try:
            self.predicted = self.makepred(self.txtprice.text())
            
            res = str(self.predicted[-1])
            self.txtResult1.setText(res)
            self.txtError.setText('')
            
        except:
            self.txtResult1.setText('')
            self.errorbox('alert', 'Please enter valid details! try again')
            
    def getval2(self):
        
        try:
            predictedcsv = self.csvdata(df)
        
            predictedcsv = pd.DataFrame(predictedcsv, columns =['closing price'])
            self.result = pd.concat([df, predictedcsv], axis =1)
            self.result = self.result.iloc[0:, 1:]
            self.txtError.setText('')
            
            self.messagebox('stock', 'successfuly predicted')
        
        except:
            self.errorbox('error', 'Please enter valid details! try again')
            
    def getCSV(self):
        global df
        import_file_path = QFileDialog.getOpenFileName()
        fname = open(import_file_path[0])
        self.filePath.setText(import_file_path[0])
        df = pd.read_csv(fname)
        return df
    
    def download(self):
        
        try:
            self.result.to_csv('stock_prediction.csv')
            self.messagebox('stock', 'downloaded!')
        except:
            self.errorbox('alert', 'Error, could not download')

    
    def setupUi(self, MainPage):
        MainPage.setObjectName("MainPage")
        MainPage.resize(639, 247)
        MainPage.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.frame_2 = QtWidgets.QFrame(MainPage)
        self.frame_2.setGeometry(QtCore.QRect(0, 0, 361, 301))
        self.frame_2.setStyleSheet("")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.txtError = QtWidgets.QLabel(self.frame_2)
        self.txtError.setGeometry(QtCore.QRect(67, 260, 221, 20))
        self.txtError.setText("")
        self.txtError.setAlignment(QtCore.Qt.AlignCenter)
        self.txtError.setObjectName("txtError")
        self.companyname = QtWidgets.QComboBox(self.frame_2)
        self.companyname.setGeometry(QtCore.QRect(72, 40, 211, 21))
        self.companyname.setStyleSheet("font: 50 10pt \"Segoe MDL2 Assets\";")
        self.companyname.setObjectName("companyname")
        self.companyname.addItem('choose a company')
        self.companyname.addItem('UBA')
        self.companyname.addItem('VITAFOAM')
        self.companyname.addItem('WAPCO')
        self.companyname.addItem('GUINNESS')
        self.companyname.addItem('JBERGER')
        self.companyname.addItem('FLOURMILL')
        
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setGeometry(QtCore.QRect(0, 210, 371, 31))
        self.frame_3.setStyleSheet("background-color: rgb(0, 45, 0);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.txtResult1 = QtWidgets.QLabel(self.frame_3)
        self.txtResult1.setGeometry(QtCore.QRect(85, 0, 191, 31))
        self.txtResult1.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.txtResult1.setText("")
        self.txtResult1.setAlignment(QtCore.Qt.AlignCenter)
        self.txtResult1.setObjectName("txtResult1")
        self.frame_4 = QtWidgets.QFrame(self.frame_2)
        self.frame_4.setGeometry(QtCore.QRect(0, 130, 361, 31))
        self.frame_4.setStyleSheet("background-color: rgb(0, 45, 0);")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.btnPredict1 = QtWidgets.QPushButton(self.frame_4)
        self.btnPredict1.setGeometry(QtCore.QRect(227, 6, 91, 21))
        self.btnPredict1.setAutoFillBackground(False)
        self.btnPredict1.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 45, 0);\n"
"border-color: rgb(255, 255,255);")
        self.btnPredict1.setDefault(False)
        self.btnPredict1.setFlat(False)
        self.btnPredict1.setObjectName("btnPredict1")
        self.btnPredict1.clicked.connect(self.getval)
        
        self.txtprice = QtWidgets.QLineEdit(self.frame_4)
        self.txtprice.setGeometry(QtCore.QRect(39, 6, 131, 20))
        self.txtprice.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.txtprice.setObjectName("txtprice")
        self.txtprice.raise_()
        self.btnPredict1.raise_()
        self.frame_5 = QtWidgets.QFrame(self.frame_2)
        self.frame_5.setGeometry(QtCore.QRect(0, 35, 371, 31))
        self.frame_5.setStyleSheet("background-color: rgb(0, 45, 0);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.frame_5.raise_()
        self.txtError.raise_()
        self.companyname.raise_()
        self.frame_3.raise_()
        self.frame_4.raise_()
        self.btnPredict1.raise_()
        self.frame = QtWidgets.QFrame(MainPage)
        self.frame.setGeometry(QtCore.QRect(360, 0, 281, 301))
        self.frame.setStyleSheet("background-color: rgb(252, 252, 252);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.txtError_2 = QtWidgets.QLabel(self.frame)
        self.txtError_2.setGeometry(QtCore.QRect(51, 260, 181, 20))
        self.txtError_2.setText("")
        self.txtError_2.setAlignment(QtCore.Qt.AlignCenter)
        self.txtError_2.setObjectName("txtError_2")
        
        self.background = QtWidgets.QLabel(self.frame)
        self.background.setGeometry(QtCore.QRect(4, 69, 271, 131))
        self.background.setText("")
        self.background.setObjectName("background")
        self.gif = QMovie("./img/stockgif1.gif")
        self.background.setMovie(self.gif)
        self.gif.start()
        self.background.setScaledContents(True)
        
        
        self.filePath = QtWidgets.QLineEdit(self.frame)
        self.filePath.setGeometry(QtCore.QRect(2, 41, 181, 20))
        self.filePath.setText("")
        self.filePath.setAlignment(QtCore.Qt.AlignCenter)
        self.filePath.setReadOnly(True)
        self.filePath.setObjectName("filePath")
        self.btnCSV = QtWidgets.QPushButton(self.frame)
        self.btnCSV.setGeometry(QtCore.QRect(187, 32, 81, 31))
        self.btnCSV.setStyleSheet("selection-background-color: rgb(240, 240, 240);\n"
"font: 81 8pt \"Rockwell Extra Bold\";\n"
"border-color: rgb(0, 85, 0);\n"
"")
        self.btnCSV.setObjectName("btnCSV")
        self.btnPredict2 = QtWidgets.QPushButton(self.frame)
        self.btnPredict2.setGeometry(QtCore.QRect(93, 136, 91, 21))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.btnPredict2.setFont(font)
        self.btnPredict2.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 72, 0);\n"
"border-color: rgb(0, 45, 0);")
        self.btnPredict2.setObjectName("btnPredict2")
        self.downloadcsv = QtWidgets.QPushButton(self.frame)
        self.downloadcsv.setGeometry(QtCore.QRect(28, 210, 221, 31))
        self.downloadcsv.setStyleSheet("color: rgb(254, 254, 254);\n"
"font: 81 12pt \"Rockwell Extra Bold\";\n"
"background-color: rgb(0, 45, 0);")
        self.downloadcsv.setObjectName("downloadcsv")
        self.downloadcsv.clicked.connect(self.download)
        
        self.retranslateUi(MainPage)
        QtCore.QMetaObject.connectSlotsByName(MainPage)

    def retranslateUi(self, MainPage):
        _translate = QtCore.QCoreApplication.translate
        MainPage.setWindowTitle(_translate("MainPage", "Main Page"))
        self.btnPredict1.setText(_translate("MainPage", "PREDICT"))
        self.txtprice.setPlaceholderText(_translate("MainPage", "enter opening price"))
        self.btnCSV.setText(_translate("MainPage", "Browse CSV"))
        self.btnCSV.clicked.connect(self.getCSV)
        
        self.btnPredict2.setText(_translate("MainPage", "PREDICT"))
        self.btnPredict2.clicked.connect(self.getval2)
        
        self.downloadcsv.setText(_translate("MainPage", "Download Result"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainPage = QtWidgets.QDialog()
    ui = Ui_MainPage()
    ui.setupUi(MainPage)
    MainPage.show()
    sys.exit(app.exec_())
