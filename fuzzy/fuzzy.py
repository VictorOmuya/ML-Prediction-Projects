# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fuzzy.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from fuzzylogic.classes import Domain
from fuzzylogic.functions import bounded_linear
from fuzzylogic.rules import weighted_sum
from PyQt5.QtGui import QPixmap

class Ui_Fuzzy(object):
    def messagebox(self, title, message):
        mess = QtWidgets.QMessageBox()
        mess.setWindowTitle(title)
        mess.setText(message)
        mess.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mess.exec_()
    
    def logic(self):
        try:
            
            a = float(self.lineEdit.text())
            b = float(self.lineEdit_2.text())
            
            if a > 5 or b > 5:
                self.messagebox("error!", "invalid GPA")
            
            else:
                
                if a <= 1.5:
                    semester1 = 1
                elif a > 1.5 and a <=2.5 :
                    semester1 = 2
                elif a > 2.5 and a <= 3.5:
                    semester1 =3
                elif a > 3.5 and a <= 4.5:
                    semester1 = 4
                elif a >4.5 and a<= 5 :
                    semester1 = 5
                    
                if b <= 1.5:
                    semester2 = 1
                elif b > 1.5 and b <=2.5 :
                    semester2 = 2
                elif b > 2.5 and b <= 3.5:
                    semester2 =3
                elif b > 3.5 and b <= 4.5:
                    semester2 = 4
                elif b >4.5 and b <= 5 :
                    semester2 = 5
                
    
            rating = Domain("rating", 1, 10, res=0.1)
            rating.norm = bounded_linear(1, 5)
            weights = {"semester1": 0.5, 
                        "semester2": 0.5, 
                        }
            
            w_func = weighted_sum(weights=weights, target_d=rating)      
            
            # we've rated semesters. on a scale from 1 to 5 separately
            ratings = {"semester1": rating.min(semester1),
                        "semester2": rating.min(semester2),
                        }
            
            result = w_func(ratings)
            
            if result > 4.5:
                self.messagebox("academic", "Evaluation result:\n 'Excellent!'")
            elif result <=4.5 and result > 3:
                self.messagebox("academic", "Evaluation result:\n 'Average!'")
            elif result <= 3:
                self.messagebox("academic", "Evaluation result:\n 'Below Average!'")
                
        except:
            self.messagebox("error!", "problem occured")
        
            
    def setupUi(self, Fuzzy):
        Fuzzy.setObjectName("Fuzzy")
        Fuzzy.resize(709, 271)
        self.lbl_back = QtWidgets.QLabel(Fuzzy)
        self.lbl_back.setGeometry(QtCore.QRect(0, 0, 711, 271))
        self.lbl_back.setText("")
        self.lbl_back.setObjectName("lbl_back")
        self.lbl_back2 = QtWidgets.QLabel(Fuzzy)
        self.lbl_back2.setGeometry(QtCore.QRect(0, 90, 711, 91))
        self.lbl_back2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lbl_back2.setText("")
        self.lbl_back2.setObjectName("lbl_back2")
        Pixmap = QPixmap('image2.jfif')
        self.lbl_back.setPixmap(Pixmap)
        self.lbl_back.setScaledContents(True)
        
        self.lineEdit = QtWidgets.QLineEdit(Fuzzy)
        self.lineEdit.setGeometry(QtCore.QRect(10, 135, 161, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Fuzzy)
        self.lineEdit_2.setGeometry(QtCore.QRect(540, 134, 161, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        
        self.label = QtWidgets.QLabel(Fuzzy)
        self.label.setGeometry(QtCore.QRect(10, 118, 141, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Fuzzy)
        self.label_2.setGeometry(QtCore.QRect(557, 116, 141, 16))
        self.label_2.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(Fuzzy)
        self.pushButton.setGeometry(QtCore.QRect(260, 127, 191, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.logic)

        self.retranslateUi(Fuzzy)
        QtCore.QMetaObject.connectSlotsByName(Fuzzy)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Fuzzy", "Fuzzy"))
        self.label.setText(_translate("Fuzzy", "1st Semester GPA"))
        self.label_2.setText(_translate("Fuzzy", "2nd Semester GPA"))
        self.pushButton.setText(_translate("Fuzzy", "Evaluate"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Fuzzy = QtWidgets.QDialog()
    ui = Ui_Fuzzy()
    ui.setupUi(Fuzzy)
    Fuzzy.show()
    sys.exit(app.exec_())
